// 4.22.1 0x2c2c71b6
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_artificial_plane_v2[]; // BITMAP_ARTIFICIAL_PLANE_V2_ID = 0, Size: 100x100 pixels
extern const unsigned char image_box[]; // BITMAP_BOX_ID = 1, Size: 82x26 pixels
extern const unsigned char image_horizonte_artificial_back_v5[]; // BITMAP_HORIZONTE_ARTIFICIAL_BACK_V5_ID = 2, Size: 552x552 pixels
extern const unsigned char image_horizonte_artificial_front_v1[]; // BITMAP_HORIZONTE_ARTIFICIAL_FRONT_V1_ID = 3, Size: 114x727 pixels
extern const unsigned char image_horizonte_artificial_front_v2[]; // BITMAP_HORIZONTE_ARTIFICIAL_FRONT_V2_ID = 4, Size: 600x1000 pixels
extern const unsigned char image_horizonte_artificial_v4[]; // BITMAP_HORIZONTE_ARTIFICIAL_V4_ID = 5, Size: 600x600 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_artificial_plane_v2, 0, 100, 100, 65, 47, 33, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_box, 0, 82, 26, 0, 0, 82, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_horizonte_artificial_back_v5, 0, 552, 552, 0, 0, 552, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 552, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_horizonte_artificial_front_v1, 0, 114, 727, 22, 5, 70, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_horizonte_artificial_front_v2, 0, 600, 1000, 0, 0, 600, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 1000, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_horizonte_artificial_v4, 0, 600, 600, 0, 0, 600, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 600, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
