/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN3VIEWBASE_HPP
#define SCREEN3VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen3_screen/Screen3Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/SlideMenu.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextureMapper.hpp>

class Screen3ViewBase : public touchgfx::View<Screen3Presenter>
{
public:
    Screen3ViewBase();
    virtual ~Screen3ViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void showFPS()
    {
        // Override and implement this function in Screen3
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Gauge gauge1;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::SlideMenu slideMenu1;
    touchgfx::ButtonWithLabel ENG;
    touchgfx::ButtonWithLabel HOR;
    touchgfx::ButtonWithLabel NAV;
    touchgfx::ToggleButton FPS;
    touchgfx::TextArea textAreaFPS;
    touchgfx::TextAreaWithOneWildcard textArea2;
    touchgfx::TextAreaWithOneWildcard textArea4;
    touchgfx::TextAreaWithOneWildcard textArea5;
    touchgfx::TextAreaWithOneWildcard textArea3;
    touchgfx::Image Fuel_Arrow;
    touchgfx::Image OilP_Arrow;
    touchgfx::Image OilF_Arrow;
    touchgfx::Image Eng_Arrow;
    touchgfx::Image Tank1_Arrow;
    touchgfx::TextureMapper Tank2_Arrow;
    touchgfx::TextArea textArea6;
    touchgfx::TextAreaWithOneWildcard fps_text3;
    touchgfx::TextAreaWithOneWildcard ms3;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea1Buffer[TEXTAREA1_SIZE];
    static const uint16_t TEXTAREA2_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea2Buffer[TEXTAREA2_SIZE];
    static const uint16_t TEXTAREA4_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea4Buffer[TEXTAREA4_SIZE];
    static const uint16_t TEXTAREA5_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea5Buffer[TEXTAREA5_SIZE];
    static const uint16_t TEXTAREA3_SIZE = 20;
    touchgfx::Unicode::UnicodeChar textArea3Buffer[TEXTAREA3_SIZE];
    static const uint16_t FPS_TEXT3_SIZE = 20;
    touchgfx::Unicode::UnicodeChar fps_text3Buffer[FPS_TEXT3_SIZE];
    static const uint16_t MS3_SIZE = 20;
    touchgfx::Unicode::UnicodeChar ms3Buffer[MS3_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<Screen3ViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // SCREEN3VIEWBASE_HPP
